/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package autoclient;


import utility.Pacchetto;
import utility.Dati;
import utility.Tools;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;

import java.io.*; 
import java.net.*; 

import javax.swing.JOptionPane;



public class Client extends javax.swing.JFrame {

    private int frequenza = 5000;
    
    Socket socket;

    ObjectInputStream inOBJ;
    ObjectOutputStream outOBJ; 
    
    Thread aggiornaT = new Thread(new Aggiorna());

    
    private static boolean accensione = false;
    private static boolean allarme = false;
    private static boolean blocco = false;
        
    private static int kmTotali = 0;
    private static int carburante = 0;
    private static int gomme = 0;
    private static int olio = 0;
    private static int batteria = 0;
        
    private static String latitudine = "0";
    private static String longitudine = "0";
    
    private boolean connected = false;
    

    
    
    public Client() {
        initComponents();
        setDefaultCloseOperation(0);
        this.setSize (500,610);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width - 500, 10);
        setTitle("Client (Proprietario)");
        
        reset ();
 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        lblConsole = new javax.swing.JLabel();
        lblMotore = new javax.swing.JLabel();
        lblMotoreV = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        lblDisplay = new javax.swing.JLabel();
        lblAllarme = new javax.swing.JLabel();
        lblAllarmeV = new javax.swing.JLabel();
        lblBlocco = new javax.swing.JLabel();
        lblBloccoV = new javax.swing.JLabel();
        lblBatteria = new javax.swing.JLabel();
        lblOlio = new javax.swing.JLabel();
        lblGomme = new javax.swing.JLabel();
        lblKm = new javax.swing.JLabel();
        lblCarburante = new javax.swing.JLabel();
        lblKmV = new javax.swing.JLabel();
        prgCarburante = new javax.swing.JProgressBar();
        prgGomme = new javax.swing.JProgressBar();
        prgOlio = new javax.swing.JProgressBar();
        prgBatteria = new javax.swing.JProgressBar();
        btnSpegni = new javax.swing.JButton();
        btnBlocca = new javax.swing.JButton();
        btnCronologia = new javax.swing.JButton();
        btnMessaggio = new javax.swing.JButton();
        lblBenvenuto = new javax.swing.JLabel();
        lblNetwork = new javax.swing.JLabel();
        lblNetworkV = new javax.swing.JLabel();
        btnConnetti = new javax.swing.JButton();
        bntPosizione = new javax.swing.JButton();
        lblLongitudine = new javax.swing.JLabel();
        lblLongitudineV = new javax.swing.JLabel();
        lblLatitudine = new javax.swing.JLabel();
        lblLatitudineV = new javax.swing.JLabel();
        lblFrequenza = new javax.swing.JLabel();
        cbFrequenza = new javax.swing.JComboBox();
        btnAggiorna = new javax.swing.JButton();
        lblAggiornamento = new javax.swing.JLabel();
        btnPreferenze = new javax.swing.JButton();
        btnSblocca = new javax.swing.JButton();
        btnEsci = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        console.setEditable(false);
        console.setColumns(20);
        console.setRows(5);
        console.setDragEnabled(false);
        console.setFocusable(false);
        jScrollPane1.setViewportView(console);

        lblConsole.setText("Console");

        lblMotore.setText("Motore:");

        lblMotoreV.setText("No Data");
        lblMotoreV.setEnabled(false);
        lblMotoreV.setFocusable(false);

        display.setEditable(false);
        display.setColumns(20);
        display.setRows(5);
        display.setDragEnabled(false);
        display.setFocusable(false);
        jScrollPane2.setViewportView(display);

        lblDisplay.setText("Display");

        lblAllarme.setText("Allarme:");

        lblAllarmeV.setText("No Data");
        lblAllarmeV.setEnabled(false);
        lblAllarmeV.setFocusable(false);

        lblBlocco.setText("Blocco:");

        lblBloccoV.setText("No Data");
        lblBloccoV.setEnabled(false);
        lblBloccoV.setFocusable(false);

        lblBatteria.setText("Batteria:");

        lblOlio.setText("Olio:");

        lblGomme.setText("Gomme:");

        lblKm.setText("Km Totali:");

        lblCarburante.setText("Carburante:");

        lblKmV.setText("No Data");
        lblKmV.setEnabled(false);
        lblKmV.setFocusable(false);

        btnSpegni.setText("Spegni");
        btnSpegni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpegniActionPerformed(evt);
            }
        });

        btnBlocca.setText("Blocca");
        btnBlocca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloccaActionPerformed(evt);
            }
        });

        btnCronologia.setText("Cronologia");
        btnCronologia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCronologiaActionPerformed(evt);
            }
        });

        btnMessaggio.setText("Messaggio");
        btnMessaggio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMessaggioActionPerformed(evt);
            }
        });

        lblBenvenuto.setText("Benvenuto ********");

        lblNetwork.setText("Network:");

        lblNetworkV.setText("Offline");

        btnConnetti.setText("Connetti");
        btnConnetti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnettiActionPerformed(evt);
            }
        });

        bntPosizione.setText("Posizione");
        bntPosizione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntPosizioneActionPerformed(evt);
            }
        });

        lblLongitudine.setText("Longitudine:");

        lblLongitudineV.setText("No Data");
        lblLongitudineV.setEnabled(false);
        lblLongitudineV.setFocusable(false);

        lblLatitudine.setText("Latitudine:");

        lblLatitudineV.setText("No Data");
        lblLatitudineV.setEnabled(false);
        lblLatitudineV.setFocusable(false);

        lblFrequenza.setText("Aggiorna ogni:");

        cbFrequenza.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normale (5 sec)", "Lento (10 sec)", "Veloce (2 sec)", "Velocissimo (1 sec)" }));
        cbFrequenza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFrequenzaActionPerformed(evt);
            }
        });

        btnAggiorna.setText("Aggiorna");
        btnAggiorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggiornaActionPerformed(evt);
            }
        });

        lblAggiornamento.setText("Ultimo aggiornamento: No Data");

        btnPreferenze.setText("Modifica Preferenze");
        btnPreferenze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreferenzeActionPerformed(evt);
            }
        });

        btnSblocca.setText("Sblocca");
        btnSblocca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSbloccaActionPerformed(evt);
            }
        });

        btnEsci.setText("Esci");
        btnEsci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEsciActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblConsole))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblMotore)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblMotoreV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBlocco)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblBloccoV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblKm)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblKmV))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblLongitudine)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblLongitudineV))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblLatitudine)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblLatitudineV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAllarme)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblAllarmeV))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(250, 250, 250)
                                        .addComponent(lblNetwork))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFrequenza)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbFrequenza, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblAggiornamento))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblNetworkV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnConnetti, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnEsci))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPreferenze))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCarburante)
                                            .addComponent(lblGomme)
                                            .addComponent(lblOlio)
                                            .addComponent(lblBatteria)))
                                    .addComponent(lblDisplay)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBlocca, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSpegni, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnMessaggio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSblocca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAggiorna, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(prgBatteria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnCronologia, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(bntPosizione, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(prgCarburante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(prgGomme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(prgOlio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBenvenuto)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBenvenuto)
                    .addComponent(lblNetwork)
                    .addComponent(lblNetworkV)
                    .addComponent(btnConnetti))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFrequenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFrequenza)
                    .addComponent(btnPreferenze))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAggiornamento)
                    .addComponent(btnEsci))
                .addGap(29, 29, 29)
                .addComponent(lblConsole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMotore)
                            .addComponent(lblMotoreV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBlocco)
                            .addComponent(lblBloccoV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAllarme)
                            .addComponent(lblAllarmeV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLatitudine)
                            .addComponent(lblLatitudineV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLongitudine)
                            .addComponent(lblLongitudineV))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKm)
                            .addComponent(lblKmV)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCarburante)
                            .addComponent(prgCarburante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGomme, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prgGomme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblOlio, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prgOlio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prgBatteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBatteria)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCronologia)
                    .addComponent(btnBlocca)
                    .addComponent(btnSblocca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMessaggio)
                    .addComponent(bntPosizione)
                    .addComponent(btnSpegni)
                    .addComponent(btnAggiorna))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpegniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpegniActionPerformed
        messaggioClient ("CS04",outOBJ,1);
    }//GEN-LAST:event_btnSpegniActionPerformed

    private void btnConnettiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnettiActionPerformed
        connetti();
    }//GEN-LAST:event_btnConnettiActionPerformed

    private void btnMessaggioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMessaggioActionPerformed
        messaggioClient (JOptionPane.showInputDialog (null, "Inserisci il messaggio da inviare all'auto."),outOBJ,1);
    }//GEN-LAST:event_btnMessaggioActionPerformed

    private void bntPosizioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntPosizioneActionPerformed
       
        try {
            Desktop.getDesktop().browse(new URL("http://maps.google.com/maps?q="+latitudine+","+longitudine+"&ll="+latitudine+","+longitudine+"&z=17").toURI());
            } catch (Exception e) {
                Tools.scrivi (display,"Impossibile aprire la pagina");
                System.out.println (e);
            }

    }//GEN-LAST:event_bntPosizioneActionPerformed

    private void btnAggiornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggiornaActionPerformed
        messaggioClient ("CS01",outOBJ,1);
    }//GEN-LAST:event_btnAggiornaActionPerformed

    private void cbFrequenzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFrequenzaActionPerformed
        if (cbFrequenza.getSelectedItem().equals("Normale (5 sec)")){
            frequenza = 5000;
        }
        if (cbFrequenza.getSelectedItem().equals("Lento (10 sec)")){
            frequenza = 10000;
        }
        if (cbFrequenza.getSelectedItem().equals("Veloce (2 sec)")){
            frequenza = 2000;
        }
        if (cbFrequenza.getSelectedItem().equals("Velocissimo (1 sec)")){
            frequenza = 1000;
        }
    }//GEN-LAST:event_cbFrequenzaActionPerformed

    private void btnBloccaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloccaActionPerformed
        messaggioClient ("CS02",outOBJ,1);
    }//GEN-LAST:event_btnBloccaActionPerformed

    private void btnCronologiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCronologiaActionPerformed
        new Cronologia().setVisible(true);
    }//GEN-LAST:event_btnCronologiaActionPerformed

    private void btnPreferenzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreferenzeActionPerformed

        Tools.scrivi (console,"Modifica parametri abilitata.");
        new Preferenze().setVisible(true);

    }//GEN-LAST:event_btnPreferenzeActionPerformed

    private void btnSbloccaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSbloccaActionPerformed
        messaggioClient ("CS03",outOBJ,1);
    }//GEN-LAST:event_btnSbloccaActionPerformed

    private void btnEsciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEsciActionPerformed
        
            
        try{
            if (connected) {
                    messaggioDisconnetti (outOBJ);
                    socket.close();
            }
        } catch (Exception e) {System.out.println (e);}
        
        System.exit(0);
    }//GEN-LAST:event_btnEsciActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntPosizione;
    private javax.swing.JButton btnAggiorna;
    private javax.swing.JButton btnBlocca;
    private javax.swing.JButton btnConnetti;
    private javax.swing.JButton btnCronologia;
    private javax.swing.JButton btnEsci;
    private javax.swing.JButton btnMessaggio;
    private javax.swing.JButton btnPreferenze;
    private javax.swing.JButton btnSblocca;
    private javax.swing.JButton btnSpegni;
    private javax.swing.JComboBox cbFrequenza;
    private javax.swing.JTextArea console;
    private javax.swing.JTextArea display;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAggiornamento;
    private javax.swing.JLabel lblAllarme;
    private javax.swing.JLabel lblAllarmeV;
    private javax.swing.JLabel lblBatteria;
    private javax.swing.JLabel lblBenvenuto;
    private javax.swing.JLabel lblBlocco;
    private javax.swing.JLabel lblBloccoV;
    private javax.swing.JLabel lblCarburante;
    private javax.swing.JLabel lblConsole;
    private javax.swing.JLabel lblDisplay;
    private javax.swing.JLabel lblFrequenza;
    private javax.swing.JLabel lblGomme;
    private javax.swing.JLabel lblKm;
    private javax.swing.JLabel lblKmV;
    private javax.swing.JLabel lblLatitudine;
    private javax.swing.JLabel lblLatitudineV;
    private javax.swing.JLabel lblLongitudine;
    private javax.swing.JLabel lblLongitudineV;
    private javax.swing.JLabel lblMotore;
    private javax.swing.JLabel lblMotoreV;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JLabel lblNetworkV;
    private javax.swing.JLabel lblOlio;
    private javax.swing.JProgressBar prgBatteria;
    private javax.swing.JProgressBar prgCarburante;
    private javax.swing.JProgressBar prgGomme;
    private javax.swing.JProgressBar prgOlio;
    // End of variables declaration//GEN-END:variables

    
    

    
    private void reset (){
        console.setText ("");
        console.append ("\n\n\n\n\n\n\n\n\n\n\n\n-Sistema Inizializzato");
        display.append ("\n\n\n\n");
        btnBlocca.setEnabled(false); 
        btnSblocca.setEnabled(false);
        
        btnSpegni.setEnabled(false); 
        btnMessaggio.setEnabled(false);
        btnAggiorna.setEnabled(false);
        bntPosizione.setEnabled(false);
        cbFrequenza.setEnabled(false);
        
        lblBenvenuto.setText ("Loggato come: "+Login.getUsername());


        Tools.scrivi (display,"Benvenuto: "+Login.getUsername());
        
        Tools.colora (lblNetworkV,255,0,0);
    }
    
    
    private void connetti (){
        try{
            
            Preferenze.leggiXML();
            
            Tools.scrivi (console,"Tentativo di accesso sul server: "+Preferenze.getIndirizzoAuto()+":"+Preferenze.getPortaAuto()+"...");
            
            
            socket=new Socket(Preferenze.getIndirizzoAuto(),Integer.parseInt(Preferenze.getPortaAuto()));

            
            outOBJ=new ObjectOutputStream(socket.getOutputStream());
            inOBJ=new ObjectInputStream(socket.getInputStream());
            
            messaggioClient (Login.getUsername(),outOBJ,9);

            Tools.scrivi (console,"Connesso.");
            
            aggiornaT.start ();
            
            Thread connesso = new Thread (new Connesso());
            connesso.start();
            
            
            } catch(Exception e){
            Tools.scrivi (console,"ERRORE TENTATIVO CONNESSIONE.");
            System.out.println (e);
            }
    }
    
    
    private class Connesso implements Runnable{
        @Override
        public void run(){
            
            connected = true;

            btnConnetti.setEnabled (false);
            //btnBlocca.setEnabled (true);
            //btnSpegni.setEnabled (true);
            //btnSblocca.setEnabled (true);
            btnAggiorna.setEnabled (true);
            btnCronologia.setEnabled (true);
            bntPosizione.setEnabled (true);
            btnMessaggio.setEnabled (true);
                
            cbFrequenza.setEnabled (true);
                
            Tools.colora (lblNetworkV,0,255,0);
            lblNetworkV.setText ("Online");
            
            Pacchetto ricevuto = new Pacchetto ();
            
            try{

                while (socket.isClosed() == false){
                    ricevuto = (Pacchetto)inOBJ.readObject();
                    int tipoPacchetto = ricevuto.getTipo();
                    // 1 = Messaggio
                    // 2 = Dati
                    
                    switch (tipoPacchetto) {
                        
                        case 1: // Testo

                                String mess = "";

                                mess = (String) ricevuto.getOggetto();
                                
                                if (mess.equals("SC01")){
                                    Tools.scrivi (console,">> Aggiornamento ricevuto.");

                                } else
                                    
                                    Tools.scrivi (display,"Mess: "+mess);
                                
                            break;
                            

                        case 2: // Dati
                        
                                Tools.scrivi (console,"Aggiornamento Ricevuto.");

                                Dati dati = new Dati ();

                                dati = (Dati) ricevuto.getOggetto();

                                accensione = dati.getAccensione();
                                allarme = dati.getAllarme();
                                blocco = dati.getBlocco();

                                kmTotali = dati.getKmTotali();
                                carburante = dati.getCarburante();
                                gomme = dati.getGomme();
                                olio = dati.getOlio();
                                batteria = dati.getBatteria();

                                latitudine = dati.getLatitudine();
                                longitudine = dati.getLongitudine();

                                aggiornaParametriGui ();
                            
                            break;
                        
                    
                    }
                
                
                }
                
                
            } catch(Exception e){
                Tools.scrivi (console,"ERRORE CONNESSIONE.");
                System.out.println (e);
                
            
            }
        }
    }

    
    
    
    private void messaggioClient (String mess, ObjectOutputStream out, int tipo) {

        try
        {   
            Pacchetto invia = new Pacchetto ();
            
            invia.setTipo(tipo);
            invia.setOggetto (mess);
            
            
            out.writeObject(invia);
            out.flush();
            Tools.scrivi (console,"Messaggio Inviato ("+mess+")");
         } catch(Exception e){
             Tools.scrivi (console,"Errore invio messaggio.");
             System.out.println (e);
         }
        
    }
    
    private void messaggioDisconnetti (ObjectOutputStream out) {

        try
        {   
            
            Pacchetto invia = new Pacchetto ();
            
            invia.setTipo(0);

            out.writeObject(invia);
            out.flush();
            Tools.scrivi (console,"Messaggio Disc. Inviato");
         } catch(Exception e){
             Tools.scrivi (console,"Errore mess. Disconnessione...");
             System.out.println (e);
         }
        
    }
    
    

  
    
    private class Aggiorna implements Runnable {
        
        @Override
        public void run()
        {   
            
            while (true){
                
                messaggioClient ("CS01",outOBJ,1);
                try {
                    Thread.sleep(frequenza);
                } catch (InterruptedException e) {
                    Tools.scrivi (console,"Errore richiesta agg.");
                    System.out.println (e);
                }
                
            }
        }
    }
    
    private void aggiornaParametriGui (){
        

        lblMotoreV.setEnabled (true);
        lblAllarmeV.setEnabled (true);
        lblBloccoV.setEnabled (true);
        lblKmV.setEnabled (true);
                
        lblLatitudineV.setEnabled (true);
        lblLongitudineV.setEnabled (true);       
                
        
        
                
        if (accensione == true)     { lblMotoreV.setText ("Acceso"); Tools.colora (lblMotoreV,0,255,0);         
                                      btnSpegni.setEnabled (true);                                              }
            else                    { lblMotoreV.setText ("Spento"); Tools.colora (lblMotoreV,255,0,0);         
                                      btnSpegni.setEnabled (false);                                             }
        
        if (allarme == true)        { lblAllarmeV.setText ("Attivato"); Tools.colora (lblAllarmeV,255,0,0);     }
            else                    { lblAllarmeV.setText ("Disattivato"); Tools.colora (lblAllarmeV,0,255,0);  }
        
        if (blocco == false)        { lblBloccoV.setText ("Non attivo"); Tools.colora (lblBloccoV,0,255,0);
                                        btnBlocca.setEnabled(true); 
                                        btnSblocca.setEnabled(false);                                           }
            else                    { lblBloccoV.setText ("Attivo"); Tools.colora (lblBloccoV,255,0,0);
                                        btnBlocca.setEnabled(false); 
                                        btnSblocca.setEnabled(true);                                            }
        
        
        lblKmV.setText (Integer.toString(kmTotali));
        lblLatitudineV.setText (latitudine);
        lblLongitudineV.setText (longitudine);
      
        prgCarburante.setValue(carburante);
        prgGomme.setValue(gomme);
        prgOlio.setValue(olio);
        prgBatteria.setValue(batteria);
        
        
        
        
    }

}
